name: build_deploy

on:
  push:
    branches:
    - main
  pull_request:
  repository_dispatch:
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://www.ituob.org
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
  
      - name: Use Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
  
      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'npm'

      - name: Checkout data
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ITUOB_CI_PAT_TOKEN }}
          repository: ituob/itu-ob-data
          path: data
          ref: ${{ needs.set_environment.outputs.data_branch }}
          fetch-depth: 1

      - name: Cache relaton
        uses: actions/cache@v4
        with:
          path: relaton
          key: ${{ runner.os }}-${{ hashFiles('data/**/*.yaml') }}

      - name: Build site
        env:
          JEKYLL_ENV: production
        run: |
          make _site
          zip -r site.zip _site

      - name: Upload site
        uses: actions/upload-artifact@v4
        with:
          name: site.zip
          path: site.zip
          retention-days: 1

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
